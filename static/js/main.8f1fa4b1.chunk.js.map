{"version":3,"sources":["firebase.js","config.js","Resume.js","ReadData.js","LandingPage.jsx","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Resume","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","positionList","qualtricsUserId","recordActivity","collapsibleOpened","collapsibleToggled","bind","_assertThisInitialized","voteClick","mouseCounter","_createClass","key","value","_this2","this","setState","studyVersion","resumeVersion","selectValues","populateValues","_this3","db","firestore","collection","doc","get","then","city","data","remote_notes","Math","random","remoteNotesText","gender","gender_icon","parenthood","temp","parent","toString","split","replace","bulletList","nonparent","education","degree","distinction","duration","major","university","work1","addPositionToList","work2","remote","set","_this4","resume2education","resume1data","remote_text_1","map","str","trim","filter","Boolean","currentUserID","work3","eventKey","event","_this5","activityCounter","count","time","Date","toLocaleString","hour12","_defineProperty","target","name","description","work1_down","work1_q","work2_down","work2_q","work3_down","work3_q","work1_up","work2_up","work3_up","education_up","education_q","education_down","notes_up","notes_q","notes_down","newPosition","prevState","concat","_toConsumableArray","_this6","length","_jsx","className","children","_jsxs","src","imageToURL","alt","VotingButtons","clickFunction","sectionName","id","item","index","Accordion","Card","Header","style","background","paddingLeft","paddingRight","Toggle","as","Button","color","width","display","flexDirection","justifyContent","fontSize","alignItems","variant","onClick","educationSectionOpened","workSectionOpened","Collapse","Body","borderTop","title","company","Divider","React","Component","imageName","process","_ref","LandingPage","height","moment","require","App","loc","document","location","hash","parseInt","console","log","_recordActivity","_asyncToGenerator","_regeneratorRuntime","mark","_callee","category","now","wrap","_context","prev","next","padStart","DATABASE","timestamp","timeEpoch","Number","format","timeReadable","tz","stop","_x","_x2","_x3","apply","arguments","HashRouter","Route","path","render","_objectSpread","exact","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8f1fa4b1.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n// Contains sensitive information, so you have to create this file yourself\nimport { firebaseConfig } from \"./config.js\";\n\nfirebase.initializeApp(firebaseConfig);\nexport default firebase;\n","export const adminPassword = \"it's so so secret\";\n\nexport const firebaseConfig = {\n\tapiKey: \"AIzaSyBpxU23CO0qhSXEwhe0KimIDfEnvGZI4II\",\n\tauthDomain: \"digital-traces-project.firebaseapp.com\",\n\tprojectId: \"digital-traces-project\",\n\tstorageBucket: \"digital-traces-project.appspot.com\",\n\tmessagingSenderId: \"478692864215\",\n\tappId: \"1:478692864215:web:84c3ed0c74f8fdc51a8092\",\n\tmeasurementId: \"G-XP5P2PWSF3\",\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport Divider from \"@material-ui/core/Divider\";\nimport firebase from \"./firebase\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\n\nexport default class Resume extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t// x: 0,\n\t\t\t// y: 0,\n\t\t\tpositionList: [],\n\t\t};\n\n\t\t// Add props to \"this\"\n\t\tthis.qualtricsUserId = this.props.qualtricsUserId;\n\t\tthis.recordActivity = this.props.recordActivity;\n\n\t\tthis.collapsibleOpened = this.collapsibleToggled.bind(this);\n\t\tthis.voteClick = this.voteClick.bind(this);\n\t\tthis.mouseCounter = 0;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setState({ studyVersion: this.props.studyVersion });\n\t\tthis.setState({ resumeVersion: this.props.resumeVersion }, () => {\n\t\t\t// On the first resume, decide the data the user will see in the whole study\n\t\t\tif (this.state.resumeVersion === 1) {\n\t\t\t\tthis.selectValues();\n\t\t\t}\n\t\t\t// Show the appropriate resume data\n\t\t\tthis.populateValues();\n\t\t});\n\t}\n\n\t// componentWillUnmount() {\n\t// \tif (this.timer) {\n\t// \t\tclearInterval(this.timer);\n\t// \t}\n\t// }\n\n\t/** Decide what values they will see in the study */\n\tselectValues() {\n\t\tconst db = firebase.firestore();\n\n\t\t//get city\n\t\tdb.collection(\"resume\")\n\t\t\t.doc(\"study2_location\")\n\t\t\t.get()\n\t\t\t.then((doc) => {\n\t\t\t\tthis.setState({ city: doc.data().city });\n\t\t\t});\n\n\t\t//select remote text for initial notes section (if study 2)\n\t\tlet remote_notes = Math.random();\n\t\tif (remote_notes < 0.5) {\n\t\t\tdb.collection(\"resume\")\n\t\t\t\t.doc(\"notes from initial phone screen\")\n\t\t\t\t.get()\n\t\t\t\t.then((doc) => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tremoteNotesText: doc.data()[\"not_working_remotely\"],\n\t\t\t\t\t});\n\t\t\t\t\tremote_notes = 1;\n\t\t\t\t});\n\t\t} else {\n\t\t\tdb.collection(\"resume\")\n\t\t\t\t.doc(\"notes from initial phone screen\")\n\t\t\t\t.get()\n\t\t\t\t.then((doc) => {\n\t\t\t\t\tthis.setState({ remoteNotesText: doc.data()[\"working_remotely\"] });\n\t\t\t\t\tremote_notes = 2;\n\t\t\t\t});\n\t\t}\n\n\t\t//select gender\n\t\tlet gender = Math.random();\n\t\tif (gender < 0.5) {\n\t\t\tthis.setState({ gender_icon: \"male_user\" });\n\t\t\tgender = \"man\";\n\t\t} else {\n\t\t\tthis.setState({ gender_icon: \"female_user\" });\n\t\t\tgender = \"woman\";\n\t\t}\n\n\t\t//select parenthood\n\t\tlet parenthood = Math.random();\n\t\tif (parenthood < 0.5) {\n\t\t\tthis.setState({ parenthood: true }, () => {\n\t\t\t\tdb.collection(\"resume\")\n\t\t\t\t\t.doc(\"notes from initial phone screen\")\n\t\t\t\t\t.get()\n\t\t\t\t\t.then((doc) => {\n\t\t\t\t\t\tlet temp = doc.data().parent.toString();\n\t\t\t\t\t\tif (gender === \"man\") {\n\t\t\t\t\t\t\ttemp = temp.replace(\"[pronoun]\", \"his\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttemp = temp.replace(\"[pronoun]\", \"her\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar split = temp.split(\".\");\n\t\t\t\t\t\tthis.setState({ bulletList: split });\n\t\t\t\t\t});\n\t\t\t});\n\t\t\tparenthood = true;\n\t\t} else {\n\t\t\tthis.setState({ parenthood: false }, () => {\n\t\t\t\tdb.collection(\"resume\")\n\t\t\t\t\t.doc(\"notes from initial phone screen\")\n\t\t\t\t\t.get()\n\t\t\t\t\t.then((doc) => {\n\t\t\t\t\t\tlet temp = doc.data().nonparent.toString();\n\t\t\t\t\t\tif (gender === \"man\") {\n\t\t\t\t\t\t\ttemp = temp.replace(\"[pronoun]\", \"his\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttemp = temp.replace(\"[pronoun]\", \"her\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar split = temp.split(\".\");\n\t\t\t\t\t\tthis.setState({ bulletList: split });\n\t\t\t\t\t});\n\t\t\t});\n\t\t\tparenthood = false;\n\t\t}\n\n\t\t//select education\n\t\tlet education = Math.random();\n\t\tif (education < 0.5) {\n\t\t\tthis.setState({ education: 0 }, () => {\n\t\t\t\tdb.collection(\"resume\")\n\t\t\t\t\t.doc(\"education a\")\n\t\t\t\t\t.get()\n\t\t\t\t\t.then((doc) => {\n\t\t\t\t\t\tthis.setState({ degree: doc.data().degree });\n\t\t\t\t\t\tthis.setState({ distinction: doc.data().distinction });\n\t\t\t\t\t\tthis.setState({ duration: doc.data().duration });\n\t\t\t\t\t\tthis.setState({ major: doc.data().major });\n\t\t\t\t\t\tthis.setState({ university: doc.data().university });\n\t\t\t\t\t});\n\t\t\t});\n\t\t\teducation = \"a\";\n\t\t} else {\n\t\t\tthis.setState({ education: 1 }, () => {\n\t\t\t\tdb.collection(\"resume\")\n\t\t\t\t\t.doc(\"education b\")\n\t\t\t\t\t.get()\n\t\t\t\t\t.then((doc) => {\n\t\t\t\t\t\tthis.setState({ degree: doc.data().degree });\n\t\t\t\t\t\tthis.setState({ distinction: doc.data().distinction });\n\t\t\t\t\t\tthis.setState({ duration: doc.data().duration });\n\t\t\t\t\t\tthis.setState({ major: doc.data().major });\n\t\t\t\t\t\tthis.setState({ university: doc.data().university });\n\t\t\t\t\t});\n\t\t\t});\n\t\t\teducation = \"b\";\n\t\t}\n\n\t\t//select work experience 1\n\t\tlet work1 = Math.random();\n\t\tif (work1 < 0.5) {\n\t\t\tthis.setState({ work1: 0 }, () => {\n\t\t\t\tdb.collection(\"resume\")\n\t\t\t\t\t.doc(\"work box 1a\")\n\t\t\t\t\t.get()\n\t\t\t\t\t.then((doc) => {\n\t\t\t\t\t\tthis.addPositionToList(doc);\n\t\t\t\t\t});\n\t\t\t});\n\t\t\twork1 = \"a\";\n\t\t} else {\n\t\t\tthis.setState({ work1: 1 }, () => {\n\t\t\t\tdb.collection(\"resume\")\n\t\t\t\t\t.doc(\"work box 1b\")\n\t\t\t\t\t.get()\n\t\t\t\t\t.then((doc) => {\n\t\t\t\t\t\tthis.addPositionToList(doc);\n\t\t\t\t\t});\n\t\t\t});\n\t\t\twork1 = \"b\";\n\t\t}\n\n\t\t//select work experience 2\n\t\tlet work2 = Math.random();\n\t\tif (work2 < 0.5) {\n\t\t\tthis.setState({ work2: 0 }, () => {\n\t\t\t\tdb.collection(\"resume\")\n\t\t\t\t\t.doc(\"work box 2a\")\n\t\t\t\t\t.get()\n\t\t\t\t\t.then((doc) => {\n\t\t\t\t\t\tthis.addPositionToList(doc);\n\t\t\t\t\t});\n\t\t\t});\n\t\t\twork2 = \"a\";\n\t\t} else {\n\t\t\tthis.setState({ work2: 1 }, () => {\n\t\t\t\tdb.collection(\"resume\")\n\t\t\t\t\t.doc(\"work box 2b\")\n\t\t\t\t\t.get()\n\t\t\t\t\t.then((doc) => {\n\t\t\t\t\t\tthis.addPositionToList(doc);\n\t\t\t\t\t});\n\t\t\t});\n\t\t\twork2 = \"b\";\n\t\t}\n\n\t\t//JUST FOR STUDY 2:\n\t\t//select remote or not remote\n\t\tlet remote = Math.random();\n\t\tif (this.state.studyVersion === 2) {\n\t\t\tif (remote < 0.5) {\n\t\t\t\tthis.setState({ remote: true });\n\t\t\t\tremote = true;\n\t\t\t} else {\n\t\t\t\tthis.setState({ remote: false });\n\t\t\t\tremote = false;\n\t\t\t}\n\t\t} else {\n\t\t\tremote = null;\n\t\t}\n\n\t\t//initialize resume 1 values\n\t\tdb.collection(\"responseIDs\")\n\t\t\t.doc(this.qualtricsUserId)\n\t\t\t.collection(\"values shown\")\n\t\t\t.doc(\"resume 1\")\n\t\t\t.set({\n\t\t\t\tgender: gender,\n\t\t\t\tparenthood: parenthood,\n\t\t\t\teducation: education,\n\t\t\t\twork1: work1,\n\t\t\t\twork2: work2,\n\t\t\t\tremote: remote,\n\t\t\t\tremoteNotesText: remote_notes,\n\t\t\t});\n\t}\n\n\t/** Read the database to see what condition the user is in, and then display the appropriate data */\n\tpopulateValues() {\n\t\tconst db = firebase.firestore();\n\n\t\t//get city\n\t\tdb.collection(\"resume\")\n\t\t\t.doc(\"study2_location\")\n\t\t\t.get()\n\t\t\t.then((doc) => {\n\t\t\t\tthis.setState({ city: doc.data().city });\n\t\t\t});\n\n\t\t// From the database, get the values that were shown to this user for resume 1\n\t\tdb.collection(\"responseIDs\")\n\t\t\t.doc(this.qualtricsUserId)\n\t\t\t.collection(\"values shown\")\n\t\t\t.doc(\"resume 1\")\n\t\t\t.get()\n\t\t\t.then((doc) => {\n\t\t\t\tlet gender = null;\n\t\t\t\tlet resume2education = null;\n\t\t\t\tlet work1 = null;\n\t\t\t\tlet work2 = null;\n\t\t\t\tlet work3 = null;\n\t\t\t\tlet remote = null;\n\n\t\t\t\tconst resume1data = doc.data();\n\n\t\t\t\tthis.setState({ remoteNotesText: resume1data.remote_text_1 });\n\n\t\t\t\tif (resume1data.gender === \"man\") {\n\t\t\t\t\tthis.setState({ gender_icon: \"man\" });\n\t\t\t\t\tgender = \"man\";\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({ gender_icon: \"woman\" });\n\t\t\t\t\tgender = \"woman\";\n\t\t\t\t}\n\n\t\t\t\t// Initial phone screen notes are based on parent/nonparent\n\t\t\t\tdb.collection(\"resume\")\n\t\t\t\t\t.doc(\"notes from initial phone screen\")\n\t\t\t\t\t.get()\n\t\t\t\t\t.then((doc) => {\n\t\t\t\t\t\tlet parenthoodText = null;\n\t\t\t\t\t\tif (resume1data.parenthood === true) {\n\t\t\t\t\t\t\tparenthoodText = doc.data().nonparent.toString();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tparenthoodText = doc.data().parent.toString();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet split = parenthoodText\n\t\t\t\t\t\t\t// Split each sentence into a bullet point,\n\t\t\t\t\t\t\t.split(\".\")\n\t\t\t\t\t\t\t// Clean up whitespace\n\t\t\t\t\t\t\t.map((str) => str.trim())\n\t\t\t\t\t\t\t// Remove any empty strings (by removing falsy values)\n\t\t\t\t\t\t\t.filter(Boolean);\n\t\t\t\t\t\tthis.setState({ bulletList: split });\n\t\t\t\t\t});\n\n\t\t\t\t// TODO: read db.collection.resume once\n\n\t\t\t\t//education - show the opposite\n\t\t\t\tif (resume1data.education === \"a\") {\n\t\t\t\t\tdb.collection(\"resume\")\n\t\t\t\t\t\t.doc(\"education b\")\n\t\t\t\t\t\t.get()\n\t\t\t\t\t\t.then((doc) => {\n\t\t\t\t\t\t\tthis.setState({ degree: doc.data().degree });\n\t\t\t\t\t\t\tthis.setState({ distinction: doc.data().distinction });\n\t\t\t\t\t\t\tthis.setState({ duration: doc.data().duration });\n\t\t\t\t\t\t\tthis.setState({ major: doc.data().major });\n\t\t\t\t\t\t\tthis.setState({ university: doc.data().university });\n\t\t\t\t\t\t});\n\t\t\t\t\tresume2education = \"b\";\n\t\t\t\t} else {\n\t\t\t\t\tdb.collection(\"resume\")\n\t\t\t\t\t\t.doc(\"education a\")\n\t\t\t\t\t\t.get()\n\t\t\t\t\t\t.then((doc) => {\n\t\t\t\t\t\t\tthis.setState({ degree: doc.data().degree });\n\t\t\t\t\t\t\tthis.setState({ distinction: doc.data().distinction });\n\t\t\t\t\t\t\tthis.setState({ duration: doc.data().duration });\n\t\t\t\t\t\t\tthis.setState({ major: doc.data().major });\n\t\t\t\t\t\t\tthis.setState({ university: doc.data().university });\n\t\t\t\t\t\t});\n\t\t\t\t\tresume2education = \"a\";\n\t\t\t\t}\n\n\t\t\t\t// TODO: haven't cleaned up below this yet\n\t\t\t\t//work1 - show the opposite\n\t\t\t\tif (doc.data().work1 === \"a\") {\n\t\t\t\t\tdb.collection(\"resume\")\n\t\t\t\t\t\t.doc(\"work box 1b\")\n\t\t\t\t\t\t.get()\n\t\t\t\t\t\t.then((doc) => {\n\t\t\t\t\t\t\tthis.addPositionToList(doc);\n\t\t\t\t\t\t});\n\t\t\t\t\twork1 = \"b\";\n\t\t\t\t} else {\n\t\t\t\t\tdb.collection(\"resume\")\n\t\t\t\t\t\t.doc(\"work box 1a\")\n\t\t\t\t\t\t.get()\n\t\t\t\t\t\t.then((doc) => {\n\t\t\t\t\t\t\tthis.addPositionToList(doc);\n\t\t\t\t\t\t});\n\t\t\t\t\twork1 = \"a\";\n\t\t\t\t}\n\n\t\t\t\t//work2 - show the opposite\n\t\t\t\tif (doc.data().work2 === \"a\") {\n\t\t\t\t\tdb.collection(\"resume\")\n\t\t\t\t\t\t.doc(\"work box 2b\")\n\t\t\t\t\t\t.get()\n\t\t\t\t\t\t.then((doc) => {\n\t\t\t\t\t\t\tthis.addPositionToList(doc);\n\t\t\t\t\t\t});\n\t\t\t\t\twork2 = \"b\";\n\t\t\t\t} else {\n\t\t\t\t\tdb.collection(\"resume\")\n\t\t\t\t\t\t.doc(\"work box 2a\")\n\t\t\t\t\t\t.get()\n\t\t\t\t\t\t.then((doc) => {\n\t\t\t\t\t\t\tthis.addPositionToList(doc);\n\t\t\t\t\t\t});\n\t\t\t\t\twork2 = \"a\";\n\t\t\t\t}\n\n\t\t\t\t//remote - show the opposite (JUST FOR STUDY 2)\n\t\t\t\tif (this.state.studyVersion === 2) {\n\t\t\t\t\tif (doc.data().remote === true) {\n\t\t\t\t\t\tthis.setState({ remote: false });\n\t\t\t\t\t\tremote = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setState({ remote: true });\n\t\t\t\t\t\tremote = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//initialize resume 2 values\n\t\t\t\tdb.collection(\"userIDs\")\n\t\t\t\t\t.doc(this.state.currentUserID)\n\t\t\t\t\t.collection(\"values shown\")\n\t\t\t\t\t.doc(\"resume 2\")\n\t\t\t\t\t.set({\n\t\t\t\t\t\tgender: gender,\n\t\t\t\t\t\tparenthood: !resume1data.parenthood,\n\t\t\t\t\t\teducation: resume2education,\n\t\t\t\t\t\twork1: work1,\n\t\t\t\t\t\twork2: work2,\n\t\t\t\t\t\twork3: work3,\n\t\t\t\t\t\tremote: remote,\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\t// TODO: move to separate file\n\t/** Called when a section is toggled open/closed */\n\tcollapsibleToggled(eventKey) {\n\t\t// TODO: add open/closed based on state\n\t\tif (eventKey === 0) {\n\t\t\t// Education Section\n\t\t\tthis.recordActivity(\n\t\t\t\t\"collapsibleToggled\",\n\t\t\t\t\"education\",\n\t\t\t\t\"toggled education section \"\n\t\t\t);\n\t\t} else if (eventKey === 1) {\n\t\t\t// Work Section\n\t\t\tthis.recordActivity(\n\t\t\t\t\"collapsibleToggled\",\n\t\t\t\t\"work\",\n\t\t\t\t\"toggled work section \"\n\t\t\t);\n\t\t}\n\t}\n\n\t// TODO: move to separate file\n\t/** Called when one of the upvote/circle/downvote buttons are clicked */\n\tvoteClick(event) {\n\t\tconst db = firebase.firestore();\n\n\t\tthis.activityCounter = this.activityCounter + 1;\n\t\tlet count = this.activityCounter.toString();\n\n\t\tvar options = { hour12: false };\n\t\tlet time = new Date().toLocaleString(\"en-US\", options);\n\n\t\tthis.setState(\n\t\t\t{ [event.target.name]: !this.state[event.target.name] },\n\t\t\t() => {\n\t\t\t\tif (this.state[event.target.name]) {\n\t\t\t\t\tdb.collection(\"studies\")\n\t\t\t\t\t\t.doc(\"study \" + this.state.studyVersion)\n\t\t\t\t\t\t.collection(\"userIDs\")\n\t\t\t\t\t\t.doc(this.state.currentUserID)\n\t\t\t\t\t\t.collection(\n\t\t\t\t\t\t\t\"activityData_resume\" + this.state.resumeVersion.toString()\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.doc(count)\n\t\t\t\t\t\t.set({\n\t\t\t\t\t\t\ttime: time,\n\t\t\t\t\t\t\tdescription: \"clicked \" + event.target.name + \" button\",\n\t\t\t\t\t\t});\n\n\t\t\t\t\t//unclick the others in the same box\n\t\t\t\t\tif (event.target.name === \"work1_up\") {\n\t\t\t\t\t\tthis.setState({ work1_down: false, work1_q: false });\n\t\t\t\t\t} else if (event.target.name === \"work2_up\") {\n\t\t\t\t\t\tthis.setState({ work2_down: false, work2_q: false });\n\t\t\t\t\t} else if (event.target.name === \"work3_up\") {\n\t\t\t\t\t\tthis.setState({ work3_down: false, work3_q: false });\n\t\t\t\t\t} else if (event.target.name === \"work1_down\") {\n\t\t\t\t\t\tthis.setState({ work1_up: false, work1_q: false });\n\t\t\t\t\t} else if (event.target.name === \"work2_down\") {\n\t\t\t\t\t\tthis.setState({ work2_up: false, work2_q: false });\n\t\t\t\t\t} else if (event.target.name === \"work3_down\") {\n\t\t\t\t\t\tthis.setState({ work3_up: false, work3_q: false });\n\t\t\t\t\t} else if (event.target.name === \"work1_q\") {\n\t\t\t\t\t\tthis.setState({ work1_up: false, work1_down: false });\n\t\t\t\t\t} else if (event.target.name === \"work2_q\") {\n\t\t\t\t\t\tthis.setState({ work2_up: false, work2_down: false });\n\t\t\t\t\t} else if (event.target.name === \"work3_q\") {\n\t\t\t\t\t\tthis.setState({ work3_up: false, work3_down: false });\n\t\t\t\t\t} else if (event.target.name === \"education_down\") {\n\t\t\t\t\t\tthis.setState({ education_up: false, education_q: false });\n\t\t\t\t\t} else if (event.target.name === \"education_up\") {\n\t\t\t\t\t\tthis.setState({ education_down: false, education_q: false });\n\t\t\t\t\t} else if (event.target.name === \"education_q\") {\n\t\t\t\t\t\tthis.setState({ education_up: false, education_down: false });\n\t\t\t\t\t} else if (event.target.name === \"notes_down\") {\n\t\t\t\t\t\tthis.setState({ notes_up: false, notes_q: false });\n\t\t\t\t\t} else if (event.target.name === \"notes_up\") {\n\t\t\t\t\t\tthis.setState({ notes_down: false, notes_q: false });\n\t\t\t\t\t} else if (event.target.name === \"notes_q\") {\n\t\t\t\t\t\tthis.setState({ notes_up: false, notes_down: false });\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdb.collection(\"studies\")\n\t\t\t\t\t\t.doc(\"study \" + this.state.studyVersion)\n\t\t\t\t\t\t.collection(\"userIDs\")\n\t\t\t\t\t\t.doc(this.state.currentUserID)\n\t\t\t\t\t\t.collection(\n\t\t\t\t\t\t\t\"activityData_resume\" + this.state.resumeVersion.toString()\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.doc(count)\n\t\t\t\t\t\t.set({\n\t\t\t\t\t\t\ttime: time,\n\t\t\t\t\t\t\tdescription: \"unclicked \" + event.target.name + \" button\",\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\t/** Helper function: append a new position to the positionList */\n\taddPositionToList(newPosition) {\n\t\tthis.setState((prevState) => ({\n\t\t\tpositionList: [...prevState.positionList, newPosition],\n\t\t}));\n\t}\n\n\trender() {\n\t\t// If our data hasn't loaded yet, show a loading screen\n\t\tif (!(this.state.bulletList && this.state.positionList.length > 0)) {\n\t\t\treturn <h1>Loading...</h1>;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"overall\">\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<div className=\"resume\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName=\"profile_image\"\n\t\t\t\t\t\t\t\tsrc={imageToURL(this.state.gender_icon)}\n\t\t\t\t\t\t\t\talt=\"the candidate\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t\t\tCandidate {this.state.resumeVersion === 1 ? \"A\" : \"B\"}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"votingblock_notes\">\n\t\t\t\t\t\t\t\t<VotingButtons\n\t\t\t\t\t\t\t\t\tstate={this.state}\n\t\t\t\t\t\t\t\t\tclickFunction={this.voteClick}\n\t\t\t\t\t\t\t\t\tsectionName=\"notes\"\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<div className=\"notes\">\n\t\t\t\t\t\t\t\t\tNotes from Initial Phone Screen:\n\t\t\t\t\t\t\t\t\t<span id=\"subtext_bullet\">\n\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.remoteNotesText && (\n\t\t\t\t\t\t\t\t\t\t\t\t<li>{this.state.remoteNotesText}</li>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t{this.state.bulletList.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn <li key={index}>{item}</li>;\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<Accordion>\n\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t<Card.Header\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tbackground: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tpaddingLeft: 0,\n\t\t\t\t\t\t\t\t\t\t\tpaddingRight: 0,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Accordion.Toggle\n\t\t\t\t\t\t\t\t\t\t\tas={Button}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"black\",\n\t\t\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"18px\",\n\t\t\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t\t\t\teventKey=\"0\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t// TODO: clean this up\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\teducationSectionOpened:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!this.state.educationSectionOpened,\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.collapsibleToggled(0);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.state.educationSectionOpened) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({ workSectionOpened: false });\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tEducation{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"toggle_icon\"\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.educationSectionOpened\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? imageToURL(\"minus_icon\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: imageToURL(\"plus_icon\")\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"toggle icon\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t\t</Card.Header>\n\n\t\t\t\t\t\t\t\t\t<Accordion.Collapse eventKey=\"0\">\n\t\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"votingblock\">\n\t\t\t\t\t\t\t\t\t\t\t\t<VotingButtons\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate={this.state}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsectionName={\"education\"}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"subtext\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.university}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"subinfo\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.degree}, {this.state.major}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"subinfogray\">{this.state.duration}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t\t\t\t</Card>\n\n\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t<Card.Header\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tbackground: \"white\",\n\t\t\t\t\t\t\t\t\t\t\tpaddingLeft: 0,\n\t\t\t\t\t\t\t\t\t\t\tpaddingRight: 0,\n\t\t\t\t\t\t\t\t\t\t\tborderTop: \"1px solid black\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Accordion.Toggle\n\t\t\t\t\t\t\t\t\t\t\tas={Button}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"black\",\n\t\t\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"18px\",\n\t\t\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t\t\t\teventKey=\"1\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tworkSectionOpened: !this.state.workSectionOpened,\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.collapsibleToggled(1);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.state.workSectionOpened) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\teducationSectionOpened: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tWork Experience {/* TODO: make toggle bars a component */}\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"toggle_icon\"\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.workSectionOpened\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? imageToURL(\"minus_icon\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: imageToURL(\"plus_icon\")\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"toggle icon\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t\t\t</Card.Header>\n\n\t\t\t\t\t\t\t\t\t{/* Position List */}\n\t\t\t\t\t\t\t\t\t<Accordion.Collapse eventKey=\"1\">\n\t\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.positionList.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"votingblock\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<VotingButtons\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate={this.state}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclickFunction={this.voteClick}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsectionName={`work${index + 1}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"subtext\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.data().title}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"horizontal\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"subinfo\">{item.data().company}</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/*remote && study version 2*/}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.studyVersion === 2 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.remote &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex === 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"subinfo\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i>Remote</i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.studyVersion === 2 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!this.state.remote &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex === 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"subinfo\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i>{this.state.city}</i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.studyVersion === 2 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex !== 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"subinfo\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i>{this.state.city}</i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"subinfogray\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.data().duration}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"subinfo\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.data().description}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Accordion>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n/**\n * Turns an image name into the src, relative to /public/images. Image should be a png.\n */\nfunction imageToURL(imageName) {\n\treturn `${process.env.PUBLIC_URL}/images/${imageName}.png`;\n}\n\n// TODO: default params for state, clickFunction\n/**\n * Component: upvote, circle, and downvote, in traffic light colors.\n */\nconst VotingButtons = ({ state, clickFunction, sectionName }) => {\n\treturn (\n\t\t<div className=\"vertical\">\n\t\t\t<img\n\t\t\t\tname={`${sectionName}_up`}\n\t\t\t\tsrc={\n\t\t\t\t\tstate[`${sectionName}_up`]\n\t\t\t\t\t\t? imageToURL(\"upvote_selected\")\n\t\t\t\t\t\t: imageToURL(\"upvote\")\n\t\t\t\t}\n\t\t\t\tonClick={clickFunction}\n\t\t\t\talt=\"upvote\"\n\t\t\t/>\n\n\t\t\t<img\n\t\t\t\tname={`${sectionName}_q`}\n\t\t\t\tsrc={\n\t\t\t\t\tstate[`${sectionName}_q`]\n\t\t\t\t\t\t? imageToURL(\"circle_selected\")\n\t\t\t\t\t\t: imageToURL(\"circle\")\n\t\t\t\t}\n\t\t\t\tonClick={clickFunction}\n\t\t\t\talt=\"question mark\"\n\t\t\t/>\n\n\t\t\t<img\n\t\t\t\tname={`${sectionName}_down`}\n\t\t\t\tsrc={\n\t\t\t\t\tstate[`${sectionName}_down`]\n\t\t\t\t\t\t? imageToURL(\"downvote_selected\")\n\t\t\t\t\t\t: imageToURL(\"downvote\")\n\t\t\t\t}\n\t\t\t\tonClick={clickFunction}\n\t\t\t\talt=\"downvote\"\n\t\t\t/>\n\t\t</div>\n\t);\n};\n","import React, {useState} from 'react';\nimport './App.css';\nimport firebase from './firebase';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { CSVLink, CSVDownload } from 'react-csv';\nimport ModalReact from 'react-modal';\nimport { Button } from 'bootstrap';\n\nclass ReadData extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //study and resume version (pulled from props)\n            studyVersion: 1,\n            resumeVersion: 1,\n\n            generatedID: '',\n            errorMessage: false,\n\n            //all tracking outputs\n            activityData: [],\n\n            loading1mouse: true,\n            loading2mouse: true,\n            loading3mouse: true,\n\n            loading1activity: true,\n            loading2activity: true,\n            loading3activity: true,\n\n            loading1resume: true,\n            loading2resume: true,\n            loading3resume: true,\n\n            mousestate: false,\n\n            study1: [],\n\n            password: '',\n            errorMessage: false,\n            modalOpened: true,\n\n            adminVersion: \"singleCSV\",\n            buttonText: \"Switch to individual CSV format\",\n        };\n        this.study1List = [];\n        this.study2List = [];\n        this.study3List = [];\n\n        this.masterMouse1 = [];\n        this.masterMouse2 = [];\n        this.masterMouse3 = [];\n\n        this.masterActivity1 = [];\n        this.masterActivity2 = [];\n        this.masterActivity3 = [];\n\n        this.masterResume1 = [];\n        this.masterResume2 = [];\n        this.masterResume3 = [];\n\n\n        this.singleMouse1 = [];\n        this.singleMouse2 = [];\n        this.singleMouse3 = [];\n        this.singleActivity1 = [];\n        this.singleActivity2 = [];\n        this.singleActivity3 = [];\n        this.singleResume1 = [];\n        this.singleResume2 = [];\n        this.singleResume3 = [];\n    }\n\n    componentDidMount(){\n        console.log(\"mounted\")\n    }\n\n    getMouseContent(itemID, studyVersion) {\n        //console.log(\"ITEM ID: \" + itemID)\n        let text = \"masterMouse\" + studyVersion\n        let csvList = []\n        let newObj = [];\n\n        let singleText = \"singleMouse\" + studyVersion\n        let newObjSingle = [];\n        var snapshot1 = firebase.firestore().collection('studies').doc('study ' + studyVersion).collection('userIDs').doc(itemID).collection(\"mouseData_resume1\").onSnapshot((snapshot) => {\n            snapshot.forEach((doc) => {\n                //console.log(doc.data().time)\n                newObj = [doc.data().time, doc.data().x, doc.data().y, 1]\n                csvList = [...csvList, newObj]\n\n                newObjSingle = [itemID, doc.data().time, doc.data().x, doc.data().y, 1]\n                this[singleText] = [...this[singleText], newObjSingle]\n            })\n            snapshot1();\n            var snapshot2 = firebase.firestore().collection('studies').doc('study ' + studyVersion).collection('userIDs').doc(itemID).collection(\"mouseData_resume2\").onSnapshot((snapshot) => {\n                snapshot.forEach((doc) => {\n                    newObj = [doc.data().time, doc.data().x, doc.data().y, 2]\n                    csvList = [...csvList, newObj]\n\n                    newObjSingle = [itemID, doc.data().time, doc.data().x, doc.data().y, 2]\n                    this[singleText] = [...this[singleText], newObjSingle]\n                })\n                let largerObj = [itemID, csvList]\n                this[text] = [...this[text], largerObj]\n                this.setState({loading2mouse: true})\n                snapshot2();\n            })\n        })\n    }\n\n    getActivityContent(itemID, studyVersion) {\n        let text = \"masterActivity\" + studyVersion\n        let csvList = []\n        let newObj = [];\n\n        let singleText = \"singleActivity\" + studyVersion\n        let newObjSingle = [];\n        var snapshot1 = firebase.firestore().collection('studies').doc('study ' + studyVersion).collection('userIDs').doc(itemID).collection(\"activityData_resume1\").onSnapshot((snapshot) => {\n            snapshot.forEach((doc) => {\n                //console.log(doc.data().time)\n                newObj = [doc.data().time, doc.data().description, 1]\n                csvList = [...csvList, newObj]\n\n                newObjSingle = [itemID, doc.data().time, doc.data().description, 1]\n                this[singleText] = [...this[singleText], newObjSingle]\n            })\n            snapshot1();\n            var snapshot2 = firebase.firestore().collection('studies').doc('study ' + studyVersion).collection('userIDs').doc(itemID).collection(\"activityData_resume2\").onSnapshot((snapshot) => {\n                snapshot.forEach((doc) => {\n                    newObj = [doc.data().time, doc.data().description, 2]\n                    csvList = [...csvList, newObj]\n\n                    newObjSingle = [itemID, doc.data().time, doc.data().description, 2]\n                    this[singleText] = [...this[singleText], newObjSingle]\n                })\n                let largerObj = [itemID, csvList]\n                this[text] = [...this[text], largerObj]\n                this.setState({loading2activity: true})\n                snapshot2();\n            })\n        })\n    }\n\n    getResumeContent(itemID, studyVersion) {\n        let text = \"masterResume\" + studyVersion\n        let csvList = []\n        let newObj = [];\n        //console.log(\"ID IN RESUME CONTENT: \" + itemID)\n\n        let singleText = \"singleResume\" + studyVersion\n        let newObjSingle = [];\n        const res1 = firebase.firestore().collection('userIDs').doc(itemID).collection(\"values shown\").doc(\"resume 1\")\n        res1.get()\n            .then((docSnapshot) => {\n                if(docSnapshot.exists){\n                    var snapshot1 = res1.onSnapshot((doc) => {\n                        let parent = doc.data().parenthood\n                        if(parent == false){\n                            parent = \"false\"\n                        }\n                        let remote = doc.data().remote\n                        if(remote == null){\n                            remote = \"N/A\"\n                        }\n                        newObj = [doc.data().education, doc.data().gender, parent, remote, doc.data().work1, doc.data().work2, doc.data().work3, 1]\n                        csvList = [...csvList, newObj]\n\n                        newObjSingle = [itemID, doc.data().education, doc.data().gender, parent, remote, doc.data().work1, doc.data().work2, doc.data().work3, 1]\n                        this[singleText] = [...this[singleText], newObjSingle]\n\n                        this.setState({loading2resume: true})\n\n                        snapshot1();\n\n                        const res2 = firebase.firestore().collection('userIDs').doc(itemID).collection(\"values shown\").doc(\"resume 2\")\n                        res2.get()\n                            .then((docSnapshot) => {\n                                if(docSnapshot.exists){\n                                    var snapshot2 = res2.onSnapshot((doc) => {\n                                        let parent = doc.data().parenthood\n                                        if(parent == false){\n                                            parent = \"false\"\n                                        }\n                                        let remote = doc.data().remote\n                                        if(remote == null){\n                                            remote = \"N/A\"\n                                        }\n                                        newObj = [doc.data().education, doc.data().gender, parent, remote, doc.data().work1, doc.data().work2, doc.data().work3, 2]\n                                        csvList = [...csvList, newObj]\n                        \n                                        let largerObj = [itemID, csvList]\n                                        this[text] = [...this[text], largerObj]\n\n                                        newObjSingle = [itemID, doc.data().education, doc.data().gender, parent, remote, doc.data().work1, doc.data().work2, doc.data().work3, 2]\n                                        this[singleText] = [...this[singleText], newObjSingle]\n                        \n                                        this.setState({loading2resume: true})\n\n                                        snapshot2();\n                                    });\n                                }\n                                else{\n                                    console.log(\"did not find part 2 for \" + itemID)\n                                    let largerObj = [itemID, csvList]\n                                    this[text] = [...this[text], largerObj]\n                                    this.setState({loading2resume: true})\n                                }\n                            })\n\n                    })\n                }\n                else{\n                    console.log(\"did not find part 1 for \" + itemID)\n                }\n            })\n    }\n\n    async getStudyLists(){\n        const study1 = await firebase.firestore().collection(\"studies\").doc(\"study 1\").collection(\"userIDs\").get()\n        if(study1.docs.length > 0){\n            this.study1List = [...study1.docs]\n\n            this.study1List.forEach((item, index) => {\n                this.getMouseContent(item.id, 1)\n                this.getActivityContent(item.id, 1)\n                this.getResumeContent(item.id, 1)\n            })\n\n            this.setState({loading1mouse: false})\n        }\n\n        const study2 = await firebase.firestore().collection(\"studies\").doc(\"study 2\").collection(\"userIDs\").get()\n        if(study2.docs.length > 0){\n            this.study2List = [...study2.docs]\n\n            this.study2List.forEach((item, index) => {\n                this.getMouseContent(item.id, 2)\n                this.getActivityContent(item.id, 2)\n                this.getResumeContent(item.id, 2)\n            })\n\n            this.setState({loading2mouse: false})\n        }\n\n        const study3 = await firebase.firestore().collection(\"studies\").doc(\"study 3\").collection(\"userIDs\").get()\n        if(study3.docs.length > 0){\n            this.study3List = [...study3.docs]\n\n            this.study3List.forEach((item, index) => {\n                this.getMouseContent(item.id, 3)\n                this.getActivityContent(item.id, 3)\n                this.getResumeContent(item.id, 3)\n            })\n\n            this.setState({loading3mouse: false})\n        }\n    }\n\n    renderMouseData = (studyVersion) => {\n        let text = \"masterMouse\" + studyVersion\n        //console.log(this[text].length)\n        if(this[text].length > 0){\n            let viewPositionList = []\n            this[text].forEach((item, index) => {\n                //console.log(\"ITEM: \" + item)\n\n                viewPositionList.push(\n                    <div>\n                        <CSVLink data={item[1]} filename={item[0] + \"_mouseData.csv\"}>{item[0]}_mouseData</CSVLink>\n                        {/*<div id=\"subinfogray\">{item}</div>*/}\n                    </div>\n                )\n            })\n            return viewPositionList\n        }\n        else{\n            return null\n        }\n    }\n\n    renderActivityData = (studyVersion) => {\n        let text = \"masterActivity\" + studyVersion\n        //console.log(this[text].length)\n        if(this[text].length > 0){\n            let viewPositionList = []\n            this[text].forEach((item, index) => {\n                //console.log(\"ITEM: \" + item)\n\n                viewPositionList.push(\n                    <div>\n                        <CSVLink data={item[1]} filename={item[0] + \"_activityData.csv\"}>{item[0]}_activityData</CSVLink>\n                    </div>\n                )\n            })\n            return viewPositionList\n        }\n        else{\n            return null\n        }\n    }\n\n    handleChange(event) {\n        this.setState({errorMessage: false})\n        this.setState({password: event.target.value})\n    }\n\n    submitPassword(){\n        if(this.state.password == \"$bhMNKt8K6\"){\n            this.setState({modalOpened: false})\n            this.getStudyLists();\n        }\n        else{\n            this.setState({errorMessage: true})\n        }\n    }\n\n    renderResumeData = (studyVersion) => {\n        let text = \"masterResume\" + studyVersion\n        //console.log(this[text].length)\n        if(this[text].length > 0){\n            let viewPositionList = []\n            this[text].forEach((item, index) => {\n                //console.log(\"ITEM: \" + item)\n\n                viewPositionList.push(\n                    <div>\n                        <CSVLink data={item[1]} filename={item[0] + \"_resumeData.csv\"}>{item[0]}_resumeData</CSVLink>\n                        {/*<div id=\"subinfogray\">{item}</div>*/}\n                    </div>\n                )\n            })\n            return viewPositionList\n        }\n        else{\n            return null\n        }\n    }\n\n    renderMouseSingle = (studyVersion) => {\n        let text = \"singleMouse\" + studyVersion\n        if(this[text].length > 0){\n            let viewPositionList = []\n            viewPositionList.push(\n                <div>\n                    <CSVLink data={this[text]} filename={\"mouseData\" + studyVersion + \".csv\"}>{\"mouseData\" + studyVersion + \".csv\"}</CSVLink>\n                </div>\n            )\n            return viewPositionList\n        }\n        else{\n            return null\n        }\n    }\n\n    renderActivitySingle = (studyVersion) => {\n        let text = \"singleActivity\" + studyVersion\n        if(this[text].length > 0){\n            let viewPositionList = []\n            viewPositionList.push(\n                <div>\n                    <CSVLink data={this[text]} filename={\"activityData\" + studyVersion + \".csv\"}>{\"activityData\" + studyVersion + \".csv\"}</CSVLink>\n                </div>\n            )\n            return viewPositionList\n        }\n        else{\n            return null\n        }\n    }\n\n    renderResumeSingle = (studyVersion) => {\n        let text = \"singleResume\" + studyVersion\n        if(this[text].length > 0){\n            let viewPositionList = []\n            viewPositionList.push(\n                <div>\n                    <CSVLink data={this[text]} filename={\"resumeData\" + studyVersion + \".csv\"}>{\"resumeData\" + studyVersion + \".csv\"}</CSVLink>\n                </div>\n            )\n            return viewPositionList\n        }\n        else{\n            return null\n        }\n    }\n\n    switchAdminFormat(){\n        if(this.state.adminVersion == \"individualCSV\"){\n            this.setState({adminVersion: \"singleCSV\"})\n            this.setState({buttonText: \"Switch to individual CSV format\"})\n        }\n        else{\n            this.setState({adminVersion: \"individualCSV\"})\n            this.setState({buttonText: \"Switch to single CSV format\"})\n\n        }\n        console.log(\"switched\")\n    }\n\n    render() {\n        return (\n            <div className=\"overall\">\n                <ModalReact className=\"modal_dtp\"\n                    isOpen={this.state.modalOpened}>\n                    <div> Enter password: </div>\n                    <input onChange={this.handleChange.bind(this)} value={this.state.password} />\n                    <button onClick={() => this.submitPassword()}> Submit </button>\n                    {this.state.errorMessage && <div id=\"red\">Invalid password. Please re-enter.</div>}\n                </ModalReact>\n\n                <button onClick={() => this.switchAdminFormat()}> {this.state.buttonText} </button>\n\n\n                <div className=\"title\">Download Data</div>\n                <div className=\"horizontal\" id=\"big\">\n                        <div>Mouse Data</div>\n                        <div>Activity Data</div>\n                        <div>Resume Data</div>\n                    </div>\n                <hr/>\n                <div className=\"list\">\n                    <div id=\"title\">Study 1: </div>\n                    {this.state.adminVersion == \"individualCSV\" && \n                        <div className=\"horizontal\">\n                            <div>{this.renderMouseData(1)}</div>\n                            <div>{this.renderActivityData(1)}</div> \n                            <div>{this.renderResumeData(1)}</div>\n                        </div>\n                    }\n                    {this.state.adminVersion == \"singleCSV\" && \n                        <div className=\"horizontal\">\n                            <div>{this.renderMouseSingle(1)}</div>\n                            <div>{this.renderActivitySingle(1)}</div> \n                            <div>{this.renderResumeSingle(1)}</div>\n                        </div>\n                    }\n                </div>\n                <hr/>\n                <div className=\"list\">\n                    <div id=\"title\">Study 2: </div>\n                    {this.state.adminVersion == \"individualCSV\" && \n                        <div className=\"horizontal\">\n                            <div>{this.renderMouseData(2)}</div>\n                            <div>{this.renderActivityData(2)}</div>\n                            <div>{this.renderResumeData(2)}</div>\n                        </div>\n                    }\n                    {this.state.adminVersion == \"singleCSV\" && \n                        <div className=\"horizontal\">\n                            <div>{this.renderMouseSingle(2)}</div>\n                            <div>{this.renderActivitySingle(2)}</div> \n                            <div>{this.renderResumeSingle(2)}</div>\n                        </div>\n                    }\n                </div>\n                <hr/>\n                <div className=\"list\">\n                    <div id=\"title\">Study 3: </div>\n                    {this.state.adminVersion == \"individualCSV\" && \n                        <div className=\"horizontal\">\n                            <div>{this.renderMouseData(3)}</div>\n                            <div>{this.renderActivityData(3)}</div>\n                            <div>{this.renderResumeData(3)}</div>\n                        </div>\n                    }\n                    {this.state.adminVersion == \"singleCSV\" && \n                        <div className=\"horizontal\">\n                            <div>{this.renderMouseSingle(3)}</div>\n                            <div>{this.renderActivitySingle(3)}</div> \n                            <div>{this.renderResumeSingle(3)}</div>\n                        </div>\n                    }\n                </div> \n            </div>\n        );\n    }\n}\n\nexport default ReadData;\n","import React from \"react\";\n\nexport default function LandingPage({ props }) {\n\treturn (\n\t\t<div className=\"LandingPage container\">\n\t\t\t<h1>Pretend this is the Qualtrics Survey</h1>\n\n\t\t\t<h2>You'll have some questions</h2>\n\t\t\t<p>And information and such</p>\n\n\t\t\t<p>And then you can embed the Digital Trace Data page.</p>\n\n\t\t\t<iframe\n\t\t\t\theight=\"600px\"\n\t\t\t\twidth=\"100%\"\n\t\t\t\tsrc=\"/online-survey-digital-trace-data/#/1/1/0sampleResponseID\"\n\t\t\t\ttitle=\"11\"\n\t\t\t></iframe>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport Resume from \"./Resume\";\nimport \"./App.css\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport ReadData from \"./ReadData\";\nimport LandingPage from \"./LandingPage\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nvar moment = require(\"moment-timezone\");\n\n// import Admin from \"./Admin\";\n\nexport default class App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.activityCounter = 1;\n\t\tthis.recordActivity = this.recordActivity.bind(this);\n\n\t\t// This is hacky, but ReactRouter can't parse URL parameters unless inside a Route\n\t\tconst loc = document.location.hash;\n\t\tthis.studyVersion = parseInt(loc.split(\"/\")[1]);\n\t\tthis.resumeVersion = parseInt(loc.split(\"/\")[2]);\n\t\tthis.qualtricsUserId = loc.split(\"/\")[3];\n\n\t\t// Print for debugging purposes within Qualtrics\n\t\tconsole.log(\"qualtricsUserId: \" + this.qualtricsUserId);\n\t}\n\n\t/** Record the data in Firebase */\n\tasync recordActivity(category, value, description) {\n\t\t// This will be the ID of the activity in Firebase -- a string, padded to 5 digits so alphabetical sorting works\n\t\tconst id = this.activityCounter.toString().padStart(5, \"0\");\n\t\tthis.activityCounter = this.activityCounter + 1;\n\n\t\tconst now = moment();\n\n\t\tif (this.DATABASE) {\n\t\t\tthis.DATABASE.collection(\"userIDs\")\n\t\t\t\t.doc(this.qualtricsUserId)\n\t\t\t\t.collection(\"activityData_resume\" + this.resumeVersion.toString())\n\t\t\t\t.doc(id)\n\t\t\t\t.set({\n\t\t\t\t\tcategory: category,\n\t\t\t\t\tdescription: description,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\ttimestamp: new Date(now),\n\t\t\t\t\ttimeEpoch: Number(now.format(\"x\")),\n\t\t\t\t\ttimeReadable: now.tz(\"America/Los_Angeles\").format(\"M-D-YY h:mm:ssa\"),\n\t\t\t\t});\n\t\t}\n\n\t\tconsole.log(id + \" \" + category + \": \" + value + \" -- \" + description);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.recordActivity(\"loading\", \"accessed\", \"App mounted\");\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<HashRouter>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/:studyVersion/:resumeVersion/:qualtricsUserId\"\n\t\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t\t<Resume\n\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\tstudyVersion={this.studyVersion}\n\t\t\t\t\t\t\t\tresumeVersion={this.resumeVersion}\n\t\t\t\t\t\t\t\trecordActivity={this.recordActivity}\n\t\t\t\t\t\t\t\tqualtricsUserId={this.qualtricsUserId}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{/* <Route path=\"/admin\" render={<ReadData />} /> */}\n\n\t\t\t\t\t<Route path=\"/\" exact render={() => <LandingPage />} />\n\t\t\t\t</HashRouter>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}